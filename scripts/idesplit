#!/bin/bash

# Script that 
#  * creates a tmux session with a predefined layout
#  * attaches to existing session

IDESPLIT_DIRECTIVE=.idesplit.ide
idesplit_session_name=dev
idesplit_test_pane="dev.3"

if [ -f "$IDESPLIT_DIRECTIVE" ]; then
  # idesplit_session_name="idesplit"
  # idesplit_test_pane="testpane.0"
  source $IDESPLIT_DIRECTIVE;
fi

IDESPLIT_SESSION_EXISTS=1

# Check if the defined session exists
if [ -z ${idesplit_session_name+x} ]; then
  $(tmux has -t=$idesplit_session_name)
  IDESPLIT_SESSION_EXISTS=$?
fi;

# Get current tmux session's name
CURRENT_SESSION_NAME=$(tmux display-message -p '#S')
IS_SHELL_ATTACHED=$?

git rev-parse --is-inside-work-tree 2> /dev/null
IS_GIT_PROYECT=$?

if [ "$IS_SHELL_ATTACHED" -eq 1 ]; then
  echo "Can't attach to $idesplit_session_name"
  if [ "$CURRENT_SESSION_NAME" -eq "$idesplit_session_name" ];
  then
    echo "You are already aattached to $idesplit_session_name"
    exit 0
  fi
  echo "Please dettach from $CURRENT_SESSION_NAME first"
  exit 1
fi

tmux new-session -n $idesplit_session_name

if [ "$IDESPLIT_SESSION_EXISTS" -eq 1 ]; then
  tmux split-window -v -p 20 -t "$CURRENT_SESSION_NAME.0"
  tmux split-window -h -p 30 -t "$CURRENT_SESSION_NAME.0"
  tmux split-window -v -p 25 -t "$CURRENT_SESSION_NAME.1"
  tmux split-window -h -p 30 -t "$CURRENT_SESSION_NAME.3"
  tmux send-keys -t $session.2 "gitstatusticker" C-m

  # Load vim panels
  dirname=$(basename "$PWD")
  if [ -f "$dirname.vim" ]; then

    session_file="$dirname.vim"

    if [ $IS_GIT_PROYECT -eq 0 ]; then
      git_repository=$(git rev-parse --show-toplevel)
      git_repository=$(basename $git_repository)
      branch_name=$(git rev-parse --abbrev-ref HEAD)
      branch_name=$(basedir $branch_name);
    fi
    tmux send-keys -t $session.0 "vim -S ./$session_file" C-m
  fi;

  if [ -f "./sidekick.vim" ]; then
    # TODO integrate with brancher sessions
    tmux send-keys -t $session.1 'vim -S ./sidekick.vim' C-m
  fi;
fi
