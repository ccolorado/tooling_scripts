#!/bin/bash

GOTO_PROJECT_HOME="$HOME/.goto_project"
GOTO_PROJECT_CONFIG="$GOTO_PROJECT_HOME/project_list"
ACTION="LIST"


if [ ! -d "$GOTO_PROJECT_HOME" ]; then
  mkdir $GOTO_PROJECT_HOME
fi

if [ ! -d "$GOTO_PROJECT_CONFIG" ]; then
  touch $GOTO_PROJECT_CONFIG
fi


while getopts ":a:" option ; do
  case $option in
    a ) ACTON=$OPTARG ;;
    l ) ACTION=$OPTARG ;;
    * ) exit 1 ;;
  esac
done

# TODO: Implement in python or ruby
# TODO: Create ADD option
# TODO: BUMP selected Project to the top of the list
# TODO: project name autocompletion # https://iridakos.com/tutorials/2018/03/01/bash-programmable-completion-tutorial.html
#     * grep "^#$1" ~/.goto_project/project_list | cut -d'#' -f2


CHOSEN=0
PROJECTS=()
LIST="" # Temporal deubg varialbe
MENU=""; # Visual representation of list
config_lines="$(cat $GOTO_PROJECT_CONFIG)"
index=0

while read line; do
  if [[ $line =~ ^#.*$ ]]; then
    LIST=$LIST"$line\n"
    MENU=$MENU"$index "$(echo $line | sed -r 's/#/ /g')"\n"
    PROJECTS+=("$line")
    index=$[$index +1]
  fi
done <$GOTO_PROJECT_CONFIG

# echo -e $LIST
echo "      ==== MENU : $GOTO_PROJECT_CONFIG ===="
echo -e  $MENU


if [[ $1 =~ ^[0-9]+$ ]] ; then
  echo $1
  echo ${PROJECTS[$1]}
  CHOICE=${PROJECTS[$1]}
  CHOSEN=1
fi

if [ $CHOSEN -eq 1 ]; then

  DATA="$(echo $CHOICE | sed -r 's/#//g')"
  PROJECT_NAME=$(echo $DATA | cut -d ' ' -f1)
  PROJECT_DIRECTORY=$(echo $DATA | cut -d ' ' -f2)
  echo "loading $PROJECT_NAME >> $PROJECT_DIRECTORY"
  if [ -d $PROJECT_DIRECTORY ]; then

    if [ "$(pwd)" = "$PROJECT_DIRECTORY" ]; then
      echo "Aborting, changing directory is the same as the current one"
      exit 0
    else
      cd $PROJECT_DIRECTORY
      exec bash
    fi

  else
    echo "Project $PROJECT_NAME's directory $PROJECT_DIRECTORY, doesnt exists"
    exit 1
  fi

fi
