#!/bin/bash

# Script that attempts to "kick" fix audio into working
# kills pipewire if exists and then tries to set the bluetooth headset bluetooth.codec to ldac_sq
# Does not validate if the devisce exists
#
# Note: address string example
# bluez.path = "/org/bluez/hci0/dev_01_80_DE_00_0A_F7"
#
# TODO: check if kdialog is installed and notify action taken

LOG_FILE="/tmp/scripts/ss_redosound.log"

declare -A DEVICES
DEVICES["01_80_DE_00_0A_F7"]="alias=OP3 codec=ldac_sq"

# DEVICES["AC_80_0A_77_BB_63"]="alias=W1k codec=ldac_hq"
# DEVICES["AC_80_0A_77_BB_63"]="alias=W1k codec=ldac_mq"
# DEVICES["AC_80_0A_77_BB_63"]="alias=W1k codec=ldac_sq"
# DEVICES["AC_80_0A_77_BB_63"]="alias=W1k codec=sbc"
DEVICES["AC_80_0A_77_BB_63"]="alias=W1k codec=sbc_xq_453"
# DEVICES["AC_80_0A_77_BB_63"]="alias=W1k codec=sbc_xq_512"
# DEVICES["AC_80_0A_77_BB_63"]="alias=W1k codec=sbc_xq_552"

DEVICES["01_02_03_04_18_9D"]="alias=EN4 codec=ldac_sq" # Soundpeates Engine 4
DEVICES["98_80_BB_40_CE_2D"]="alias=A4P codec=aptx"

sudo -H -u ccolorado bash -c mkdir -p /tmp/scripts/
sudo -H -u ccolorado bash -c touch -m $LOG_FILE
chmod a+rw $LOG_FILE

# Function to check connected Bluetooth devices from pactl sinks
echo "[ START ss_redosound $(date)]" >> $LOG_FILE
echo "0 $0" >> $LOG_FILE
echo "1 $1" >> $LOG_FILE
echo "2 $2" >> $LOG_FILE

check_connected_device() {
    local sink_list;
    # sink_list=$(sudo -Hu ccolorado "pactl list sinks | grep "bluez.path" | sort | uniq | cut -d= -f2")
    sink_list=$(pactl list sinks | grep "bluez.path" | sort | uniq | cut -d= -f2)
    local connected_device=""

    for device in "${!DEVICES[@]}"; do
        if printf '%s\n' "$sink_list" | grep -qi "$device"; then
            # echo "* $device"
            connected_device=$device
            break
        fi
    done

    if [[ -n $connected_device ]]; then
        printf '%s\n' "$connected_device"
    else
        printf '%s\n' ""
    fi
}

counter=0
while true; do
    echo ">> Looking for devices. Attempt $cunter" >> $LOG_FILE;

    STATUS=$(pactl list sinks | grep -e "bluetooth.codec\|bluetooth.battery\|bluez.path" | sort | uniq)
    CODEC_FIND_CMD=$(echo "$STATUS" | grep codec | tail -1 | cut -d'=' -f2)
    CODEC_FIND_CMD=$(echo $CODEC_FIND_CMD | tr -d '"')

    BATTERY_FIND_CMD=$(echo "$STATUS" | grep battery | tail -1 | cut -d= -f2)
    ADDRESS=$(check_connected_device)

    # echo 59
    # Debug running as root for udev
    # STATUS=$(pactl list sinks )
    # echo "status : $STATUS"
    # echo "address : $ADDRESS"
    # echo "devices : $DEVICES"
    #
    # echo 64

    echo $ADDRESS
    touple="${DEVICES[$ADDRESS]}"
    ALIAS=$(echo $touple | cut -d\  -f1 | cut -d= -f2)
    CODEC=$(echo $touple | cut -d\  -f2 | cut -d= -f2)

    if [ ! -z "${ALIAS}" ]; then  # if $ALIAS IS SET
        echo "  DEVICE FOUND" >> $LOG_FILE
        break;
    fi

    echo "DEVICE NOT FOUND. ATTEMPT $counter" >> $LOG_FILE; 

    sleep 5
    counter=$((counter+1))

    if [[ "$counter" -gt 10 ]]; then
        echo "EXAHUSTED ATTEMPTS" >> $LOG_FILE
        exit 1
    fi

done

echo "Alias : $ALIAS" >> $LOG_FILE;
echo "ADDRESS : $ADDRESS" >> $LOG_FILE;
echo "Codec : $CODEC_FIND_CMD => $CODEC" >> $LOG_FILE;

echo "================================================ "
echo -e $STATUS
echo "================================================ "

echo $STATUS >> $LOG_FILE

echo "Detected Device $ALIAS"
echo "Address : $ADDRESS"
echo "Codec   : $CODEC_FIND_CMD => $CODEC"
echo "BAttery : $BATTERY_FIND_CMD"

if [ $CODEC_FIND_CMD != "$CODEC" ]; then
  echo "Switching..."
  SINK_SELECTOR="/card/bluez_card.$ADDRESS/bluez"
  # command="pactl send-message $SINK_SELECTOR switch-codec '$CODEC'"
  command="pactl send-message $SINK_SELECTOR switch-codec $CODEC"
  $command
else
  echo "Nothing to do, Codec already set";
fi

echo "[ END ss_redosound $(date)]" >> $LOG_FILE
